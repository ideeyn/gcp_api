name: Deploy to Cloud Run

env:
  SERVICE_NAME: github-action-gcpapi
  REGION: asia-southeast2
  PROJECT_ID: ideeyn-api
  REPOSITORY_NAME: repo-gcpapi
  IMAGE_NAME: customable-name

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dockerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Environment Variables
        run: |
          echo "DOCKER_NAME=${{ env.REGION }}-docker.pkg.dev" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_URL=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Google Cloud Auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCPAPI_CLOUDRUN_KEY }}"
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Ensure Artifact Registry Exists
        run: |
          gcloud artifacts repositories describe ${{env.REPOSITORY_NAME}} --location=${{env.REGION}} || \
          gcloud artifacts repositories create ${{env.REPOSITORY_NAME}} \
          --repository-format=docker \
          --location=${{env.REGION}} \
          --description="Repository for GitHub Actions deployment"

      - name: Check Artifact Registry Permissions
        run: |
          gcloud artifacts repositories list --location=${{env.REGION}}

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{env.DOCKER_NAME}}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_URL }}:latest .
          docker push ${{ env.DOCKER_IMAGE_URL }}:latest

      - name: Deploy to Cloud Run
        run: |
          echo SERVICE_NAME: ${{ env.SERVICE_NAME }}
          gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image ${{ env.DOCKER_IMAGE_URL }}:latest \
          --platform managed \
          --region ${{env.REGION}} \
          --allow-unauthenticated
